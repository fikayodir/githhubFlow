name: "Terraform action"

on: 
  push:
    branches:
      - main
    paths:
      - 'WK1/**'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps: 
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM 

    - name: Initialize Terraform
      env: 
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
      run: |
        cd WK2/TASK1
        terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}"

    - name: Terraform plan
      id: plan
      run: |
        cd WK2/TASK1
        terraform plan
      continue-on-error: false

    - name: Apply Terraform
      run: |
        cd WK2/TASK1
        terraform apply -auto-approve
    - name: Get Terraform output
      run: |
        cat WK2/TASK1/tf_output.json
        public_ip=$(jq -r '.instance_public_ip.value' < WK2/TASK1/tf_output.json)
        echo "public_ip=${public_ip}" >> $GITHUB_ENV

    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
    
    - name: SSH into EC2 and run commands
      run: |
            ssh -o StrictHostKeyChecking=no ec2-user@$public_ip 'bash -s' <<'EOF'
              echo "Connected to EC2"
              # Place your commands here
              # For example, navigate to your project directory and pull the latest changes
              # cd /path/to/your/project
              # git pull origin main
              # Other commands, e.g., restarting a service
              # sudo systemctl restart your-service
            EOF
